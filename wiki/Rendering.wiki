#summary Description of the various rendering techniques available.

= Rendering =

Rendering is the way the data is displayed in the viewport. It translates the list of localizations into an image or a plot. 

PALMsiever currently provides the following rendering techniques.
  * Points
  * Histogram
  * KDE
  * KDE contour
  * Histogram + Gauss filter
  * 3D Hue-opacity
  * Jittered histogram
  * Delaunay triangulation
  * 3D Hue

= Points =
Each localization is drawn as a single dot and colored according to a linear scaling of the "ID / group-by column".

= Histogram =
All localizations are binned into a NxN grid, where N is 256, 512, 1024, 2048 or 4096 pixels. The intensity of each pixel in the image is proportional to the number of localization falling within that particular bin.

= KDE =
KDE stands for Kernel Density Estimation. Although the name is generic, the algorithm is a specific type of Kernel Density Estimation described in (1). You can think of the rendering as a smoothed version of the Histogram, with the smoothing kernel bandwith determined automatically based on the density of the data.

= KDE contour =
This generates the same rendering as above, but then draws a contour plot of the resulting 2D map.

= Histogram + Gauss filter =
This is a histogram rendering smoothed with a Gaussian filter. The sigma of the smoothing Gaussian is read from the "Sigma" parameter in the center column of the interface.

= 3D Hue-opacity =
This rendering is based on the classic color-coded depth histogram, but with a twist. Each layer is generated separately and then combined from the deeper levels upto the first, with an opacity factor which only keeps the shallow-most structure visible at each point.

= Jittered histogram =
Here, the data is generated many times and disturbed with Gaussian noise (sigma from the center column). All the points are then accumulated in a histogram.

= Delaunay triangulation =
This representation, first proposed by Baddeley, performs a triangulation of the data points and then colors the triangles with a color inversely proportional to the size of the triangle. So, smaller triangles, corresponding to a dense area, are presented with brighter colors. Larger triangles, corresponding to less dense areas, with darker colors.

= 3D Hue =
This is the classical color-coded depth. Localizations are binned into a 3D matrix, which is then rendered according to depth and density and averaged.

== Algorithms ==

A detailed discussion of most of the rendering algorithms presented above can be found in :

Visualization of localization microscopy data
D Baddeley, MB Cannell, C Soeller
Microscopy and Microanalysis 16 (01), 64-72