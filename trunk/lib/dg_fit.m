% Performs a double-gaussian fit on the x and y vectors, with an optional initial estimation of the width w0.
function [fitresult, gof] = dg_fit(x, y, w0)
%CREATEFIT(X,Y)
%  Create a fit.
%
%  Data for 'Double Gaussian' fit:
%      X Input : x
%      Y Output: y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.
% 
% This software is released under the GPL v3. It is provided AS-IS and no
% warranty is given.
%
% Author: Thomas Pengo, 2012

%  Auto-generated by MATLAB on 15-Mar-2012 14:43:11


%% Fit: 'Double Gaussian'.
[xData, yData] = prepareCurveData( x, y );

% Set up fittype and options.
f = 'A*exp(-(x-x0-w/2)^2/s^2)+A*exp(-(x-x0+w/2)^2/s^2)';


% opts.Lower = [0 0 0 -Inf]; % A s w x0 
% opts.StartPoint = [max(y)/2 40 18 0];
% opts.Upper = [Inf Inf Inf Inf];
% opts.Algorithm = 'Trust-Region';

opts.Algorithm = 'Levenberg-Marquardt';

if nargin<3
    ft = fittype( f, 'independent', 'x', 'dependent', 'y' );
    
    opts = fitoptions( ft );
    opts.Display = 'Off';
    opts.StartPoint = [max(y)/2 std(x)/3 std(x)/3 mean(x)];
    
    [fitresult, gof] = fit( xData, yData, ft, opts );
else
    ft = fittype( f, 'independent', 'x', 'dependent', 'y', 'problem', 'w' );
    
    opts = fitoptions( ft );
    opts.Display = 'Off';
    opts.StartPoint = [max(y)/2 std(x)/3 mean(x)];

    % Fit model to data.
    [fitresult, gof] = fit( xData, yData, ft, opts , 'problem', w0);
end

