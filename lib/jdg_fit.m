function [coeff scoeff fitresult] = jdg_fit(x, y, amount, N)
%CREATEFIT(X,Y)
%  Create a fit.
%
%  Data for 'Double Gaussian' fit:
%      X Input : x
%      Y Output: y
%  Output:
%      fitresult : a fit object representing the fit.
%      gof : structure with goodness-of fit info.
%
%  See also FIT, CFIT, SFIT.

%  Auto-generated by MATLAB on 15-Mar-2012 14:43:11

if nargin<4
    N = 1; amount = 0;
end

%% Fit: 'Double Gaussian'.

% Set up fittype and options.
ft = fittype( 'A*exp(-(x-x0-w/2)^2/s^2)+A*exp(-(x-x0+w/2)^2/s^2)', 'independent', 'x', 'dependent', 'y' );
opts = fitoptions( ft );
opts.Algorithm = 'Trust-Region';
opts.Display = 'Off';

opts.Lower = [0 0 0 -Inf]; % A s w x0 z
opts.StartPoint = [max(y)/2 40 18 0];
opts.Upper = [Inf Inf Inf Inf];

for i = 1:N
    jyData = y + randn(size(y)).*amount;
    % Fit model to data.
    if i==1
        fitresult = fit( x, jyData, ft, opts );
        coeff = coeffvalues(fitresult);
        coeff2 = coeff.^2;
    else
        fitresult = fit( x, jyData, ft, opts );
        coeff = coeff + coeffvalues(fitresult);
        coeff2 = coeffvalues(fitresult).^2 + coeff2;
    end
end

coeff = coeff/N;
coeff2 = coeff2/N ;

scoeff = sqrt(coeff2 - coeff.^2);

